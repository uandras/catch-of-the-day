{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","react_default","a","createElement","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","Order","renderOrder","key","fish","_this","fishes","count","order","status","react_transition_group","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","_this2","this","myOrders","console","log","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","state","owner","uid","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","loginType","authProvider","auth","FacebookAuthProvider","GithubAuthProvider","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","Fish","handleClick","addToOrder","_this$props$details","details","isAvailable","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","prevProps","prevState","snapshot","setItem","stringify","remove","components_Header","age","cool","components_Fish","components_Order","assign","components_Inventory","StorePicker","myInput","goToStore","storeName","history","push","Fragment","action","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.257927f4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//and for VALIDATING the prop DATA you need the following:\r\nimport PropTypes from \"prop-types\";\r\n\r\n//if the component doesn't do anything, just has a render component, u can use this kind of component definition:\r\n//this is a Stateless functional Component\r\n// there is no .this in this, only the props should be used as an argument of the function\r\n//we use curly brackets to reference the variables we used in props\r\nfunction Header(props) {\r\n  //or u can use an arrow function definition for it, if u like (uncomment for syntax):\r\n  //in case of arrow function the {return...} can be deleted as well, this way an implicit return will be used\r\n  //const Header = props => {\r\n  return (\r\n    <header className=\"top\">\r\n      <h1>\r\n        Catch\r\n        <span className=\"ofThe\">\r\n          <span className=\"of\">of</span>\r\n          <span className=\"the\">the</span>\r\n        </span>\r\n        Day\r\n      </h1>\r\n      <h3 className=\"tagline\">\r\n        <span>{props.tagline}</span>\r\n      </h3>\r\n    </header>\r\n  );\r\n}\r\n\r\n//and here we define the different prop's types (in a propTypes object), and if they required or not\r\n//failing any of these, will result a RED warning in console.log\r\n//...and it's only a development helper, won't yell us in production...:-)\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired\r\n};\r\n\r\n//and this is the full-blown version of a React component definition (uncomment is to see the syntax\r\n//this. = the particular component instance (Header), props = an object which contains all of the final properties\r\n/*\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header className=\"top\">\r\n        <h1>\r\n          Catch\r\n          <span className=\"ofThe\">\r\n            <span className=\"of\">of</span>\r\n            <span className=\"the\">the</span>\r\n          </span>\r\n          Day\r\n        </h1>\r\n        <h3 className=\"tagline\">\r\n          <span>{this.props.tagline}</span>\r\n        </h3>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n*/\r\n\r\nexport default Header;\r\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\n\r\n//this one is needed for ANIMATION:\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n//TransitionGroup: for usage see below the former ul (now TransitionGroup) component in render()\r\n//and for CSSTransition see the renderOrder function's li's\r\n//Number animation: see the added <span>-s for the \"{count}\" and for the \"li\" tags\r\n\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Order extends React.Component {\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    //the next line needed to avoid rendering when the fishes are not available from firebase yet (return null renders nothing!)\r\n    if (!fish) return null;\r\n    const isAvailable = fish && fish.status === \"available\";\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition\r\n          classNames=\"order\"\r\n          key={key}\r\n          timeout={{ enter: 250, exit: 250 }}\r\n        >\r\n          <li key={key}>\r\n            Sorry, {fish ? fish.name : \"this fish\"} is no longer available!\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition\r\n        classNames=\"order\"\r\n        key={key}\r\n        timeout={{ enter: 250, exit: 250 }}\r\n      >\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 250, exit: 250 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const myOrders = this.props.order;\r\n    console.log(\"myOrders: \", myOrders, \" \", typeof myOrders);\r\n    let orderIds = [];\r\n    if (myOrders !== null) orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === \"available\";\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func\r\n  };\r\n\r\n  createFish = event => {\r\n    //1. stop the form from submitting\r\n    event.preventDefault();\r\n    //2. get the fish values\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    //this \"fish\" has to get into a state... HOW?\r\n    //and WHERE this state lives?\r\n    //because every component in React can have it's own state,\r\n    //BUT: this state must go to a higher level in order to pass it to another component--> that's why this state will go to App.js (that's why we have the App component)\r\n\r\n    this.props.addFish(fish);\r\n    //refresh the form:\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"></textarea>\r\n        <input\r\n          name=\"image\"\r\n          type=\"text\"\r\n          ref={this.imageRef}\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from \"react\";\r\n\r\n//in order to change the parameters, there must be an onChange event,\r\n//because React DOESN'T ALLOW to change a state value without onChange\r\n//AND!!!! React thing: change only allowed if we update the state as well!!!!! - and we need to put that updated state back to App.js (INTO THE state)\r\nclass EditFishForm extends React.Component {\r\n  handleChange = event => {\r\n    //console.log(event.currentTarget.value);\r\n    //update that fish\r\n    //1. take a copy of the current fish\r\n    //computed property names are used here, IN ORDER TO know which property to be updated (new in ES6)\r\n    //that's why we needed that \"name\" property in render()\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    //2. use updateFish() in App.js\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","//AUTHENTICATION:\r\n//facebook auth.:\r\n//   TURN ON \"Embedded Browser OAuth Login\"\r\n//   COPY the auth handler URI from firebase facebook authentication to the \"Valid OAuth Redirect URIs\"\r\n\r\nimport React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n//BEWARE: stateless component, doesn't have a \"this\" property, so:\r\n//instead of \"this.props.xxx\", \"props.xxx\" should be used\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory login</h2>\r\n    <p>Sign in to manage your store's inventory:</p>\r\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\r\n      Log In with GitHub\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\r\n      Log In with FaceBook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\n//this is the firebase application (the database) we created in firebase\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAnmJB9NgLEWHtc1sZXLTmm4EEz-RFGlAY\",\n  authDomain: \"catch-of-the-day-au.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-au.firebaseio.com\",\n  projectId: \"catch-of-the-day-au\",\n  storageBucket: \"catch-of-the-day-au.appspot.com\",\n  messagingSenderId: \"913119599322\",\n  appId: \"1:913119599322:web:ac0e35fb16b7f7aed223e3\",\n  measurementId: \"G-KKP7F7WY6X\"\n});\n\n//with this the database is binded to react\nconst base = Rebase.createClass(firebaseApp.database());\n\n//end we export this with a named export (only this function is exported with it):\nexport { firebaseApp };\n\n//end the default export to allow it to bring it into an other file:\nexport default base;\n","import React from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport Login from \"./Login\";\r\nimport base, { firebaseApp } from \"../base\";\r\n\r\n//and we populate the addFish props (which comes from App) down to AddFishForm\r\n//index is needed to access the key in the EditFishForm\r\nclass Inventory extends React.Component {\r\n  state = {\r\n    owner: null,\r\n    uid: null\r\n  };\r\n\r\n  //in order to check the login state after a refresh page, we need to do the following:\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    //1. look up the current store in the firebase db\r\n    const store = await base.fetch(this.props.storeId, { context: this }); //await needed in order to get the store name back, not the promise (without await, only the promise is returned\r\n    console.log(store);\r\n    //2. claim it if there is no owner (if we are the first person to login this particular store, likely we are the owners)\r\n    if (!store.owner) {\r\n      //save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid\r\n      });\r\n    }\r\n    //3. set tthe state of the inventory component to reflect the current user\r\n    //NOTE: this will be a local state for this <Inventory> component\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid\r\n    });\r\n    console.log(authData);\r\n  };\r\n\r\n  authenticate = loginType => {\r\n    let authProvider;\r\n    switch (loginType) {\r\n      case \"Facebook\":\r\n        authProvider = new firebase.auth.FacebookAuthProvider();\r\n        break;\r\n      case \"Github\":\r\n        authProvider = new firebase.auth.GithubAuthProvider();\r\n        break;\r\n    }\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  //logout function also should be an async function, because of firebase logout\r\n  logout = async () => {\r\n    console.log(\"Logging out!\");\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  //NOTE: function exits after \"return\", that's why we don't need  the \"else\" after the \"if\"\r\n  render() {\r\n    //first of all, we will need a logout button:\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n    //1. check if they are logged in...\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    //2. ...and check if they are NOT the owner of this store...\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry, but you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n    //3. they must be the owners, so let's render the true inventory\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n            fish={this.props.fishes[key]}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish}></AddFishForm>\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { formatPrice } from \"../helpers\";\r\n\r\n//if it is a normal react component, so the propTypes will be in the component\r\n//and it will be static (valid for every instance)\r\nclass Fish extends React.Component {\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  };\r\n\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number\r\n    }),\r\n    addToOrder: PropTypes.func\r\n  };\r\n\r\n  render() {\r\n    //how to insert unicode escape sequence (emoji):\r\n    //return <div className=\"single-fish\">&#x1F41F;</div>;\r\n\r\n    //destructure multiple variables in one(easier to read, but not mandatory to do, ES6):\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === \"available\";\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button onClick={this.handleClick} disabled={!isAvailable}>\r\n          {isAvailable ? \"Add To Order\" : \"Sold Out\"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","//AUTHENTICATION:\r\n//facebook auth.:\r\n//   TURN ON \"Embedded Browser OAuth Login\"\r\n//   COPY the auth handler URI from firebase facebook authentication to the \"Valid OAuth Redirect URIs\"\r\n\r\n//App.js is the \"mother\" of all components\r\n\r\nimport React from \"react\";\r\n\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport Fish from \"./Fish\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport base from \"../base\";\r\n\r\n//see the props (dynamic attributes - object of data that is passed to the component) usage in Header\r\n//if you want to pass anything other than strings, curly bracket {} has to be used\r\n\r\n//React STATE:\r\n//is an object that lives inside a component, that holds all of the data that component (and maybe some of its children) needs.\r\n//State is a \"single source of truth\" - update only the data in the state object (and not the DOM), and let React take it\r\n//EVERY CUSTOM FUNCTION THAT ACCESS STATE, HAS TO IVE IN THE SAME COMPONENT AS THE STATE.\r\n\r\n//Local Storage: to preserve the order state in local directory: kind of like cookies, but easier to handle (basically key-value pairs)\r\n\r\nclass App extends React.Component {\r\n  //LIFECYCLE METHODS (lifecycle hooks) in React:\r\n  //tells us when certain things are happening\r\n  //details: https://reactjs.org/docs/react-component.html\r\n\r\n  //componentDidMount: fires at the very first possible second after when the component is loaded onto the page\r\n  //here will the firebase database updated\r\n  componentDidMount() {\r\n    //1.Re-instate the local storage\r\n    const localStorageRef = localStorage.getItem(\r\n      this.props.match.params.storeId\r\n    );\r\n    console.log(\"localstorageRef: \", localStorageRef);\r\n    console.log(\"typeof localstorageRef: \", typeof localStorageRef);\r\n    //JSON.parse makes an object from a string\r\n    this.setState({ order: JSON.parse(localStorageRef) });\r\n    //ref in Firebase references to a piece of data\r\n    //string info comes from App's props (match/params/:\r\n    this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\r\n      context: this,\r\n      state: \"fishes\"\r\n    });\r\n  }\r\n\r\n  //here will be the Order state loaded to the localstorage\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //JSON.stringify is needed to convert the object to string\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  //and here we will cleanup the database (remove not necessary instances) after App component is not visible anymore:\r\n  componentWillUnmount() {\r\n    base.remove(this.ref);\r\n  }\r\n\r\n  //and App class will be the place where we create the STATEs (because it is the parent class of all the classes that use state):\r\n  //1. First an empty STATE should be created\r\n  //members of the state can be any type of data (not only objects), which suits best for that member\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n  //2. Then we need an attribute with an arrow function to change the state, because the state object is not accessible from other components\r\n  addFish = fish => {\r\n    console.log(\"Adding a fish!\");\r\n    //in order to update a state we MUST use React's set state API:\r\n    //11.We must take a copy of the existing state\r\n    const fishes = { ...this.state.fishes }; //... is called an \"object spread\", it makes a copy of the object\r\n    //12. add our new fish to that fishes variable with a unique datestamp id (in order to distinguish between them)\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    //13. Set this new fishes object into the state\r\n    this.setState({\r\n      fishes: fishes\r\n    });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    //1. take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    //2. update that state\r\n    fishes[key] = updatedFish;\r\n    //3. set that to state\r\n    this.setState({ fishes: fishes });\r\n  };\r\n  //this one also has to pass down to Inventory.js, then to EditFishForm.js\r\n\r\n  deleteFish = key => {\r\n    //1. take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    //2. update the state (because of firebase it has to be null)\r\n    fishes[key] = null;\r\n    //3. update the state\r\n    this.setState({ fishes: fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    console.log(\"Loading sample fishes!!!\");\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  //3. and this arrow function attribute will be populated via props\r\n  addToOrder = key => {\r\n    //1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    //2. either add to the order or update the order (note the || symbol, to spare some lines\r\n    order[key] = order[key] + 1 || 1;\r\n    //3. call setState to update state\r\n    this.setState({ order: order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n    const order = { ...this.state.order };\r\n    order[key] = order[key] - 1;\r\n    if (order[key] === 0) delete order[key];\r\n    this.setState({ order: order });\r\n  };\r\n\r\n  render() {\r\n    //Object.keys make an array from the object elements, in order to be able to iterate through them\r\n    //NOTE: \"key\" property in <p> tags needed by React, must be unique for every element\r\n    //NOTE: \"index\" property is same as \"key\", and needed to access the key values (the \"key\" property itself is not accessible by default\r\n    //NOTE: the object spread in props for \"Order\": it can be used, if we want to pass the whole state object, this is the easiest way to do it, and it will be spread to it's parts\r\n    //NOTE: storeId for <Inventory> comes from react-router (you can check in dev tools, at App component\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" age={500} cool={true}></Header>\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              ></Fish>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order {...this.state} removeFromOrder={this.removeFromOrder}></Order>\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        ></Inventory>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport { getFunName } from \"../helpers\";\r\n\r\n//adjacent elements must be wrapped into a JSX Fragment (in this case it is not necessary, because there is only a single form element outside (but I left it here on purpose)\r\n//javascript code must be placed between: { here comes the javascript code }\r\n\r\n//React events: used almost same as in Javascript, the difference is that React events are done inline... see the onXxxxx event handlers in the below code\r\n//React events: note, that there is no function calling in onXxxxx event handlers, functions are referenced there without (), in order not to run at the time of page load, only when the event occurs\r\nclass StorePicker extends React.Component {\r\n  //makeing the refs:\r\n  myInput = React.createRef();\r\n\r\n  //own-created methods are not bound by default to React.Component, that's why \"this\" is not available here\r\n  //so we have to bind our methods also to the mother component\r\n  //solution: instead of methods, use the arrow function syntax, so this way gotoStore will be a property, with access to \"this\"\r\n  goToStore = event => {\r\n    //1. stop the form from submitting (reloading)\r\n    event.preventDefault(); //that's why the page is not reloading at every submit (page is handled locally, not server side, so no need to reload)\r\n    //2. get the text from that input ******(USE ref: reference a DOM note on a html page)******\r\n    //don't do the following (commented out line), because as a rule of thumb in React: don't touch the DOM in React\r\n    //const storeName = document.getElementById(\"input1\").getAttribute(\"value\");\r\n    const storeName = this.myInput.current.value; //\"this\" is working here, because using arrow function, goToStore now is a property, not a method\r\n    //3.change to page /store/whatever-they-enter\r\n    //NOTE: we don't want to refresh the page with a \"push\" STATE\r\n    //with \"push\" state we are allowed to change the URL without refreshing the page or losing anything from the memory\r\n    //we do it with react-router, which is accessible here, because Storepicker is a child of router\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\r\n          <h2>Please Enter a Store!</h2>\r\n          <input\r\n            type=\"text\"\r\n            ref={this.myInput}\r\n            required\r\n            placeholder=\"Store Name\"\r\n            defaultValue={getFunName()}\r\n          />\r\n          <button type=\"submit\">Visit Store&rarr;</button>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Page not found!!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\r\n//this will make the routing\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\n//Stateless Functional Component is used here as well (see Header.js for details)\r\n//how Switch works: First tries the exact route, if it is not the case then tries the 2nd route, and if not that the case, then the 3rd (fallback) route is used\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker}></Route>\r\n      <Route path=\"/store/:storeId\" component={App}></Route>\r\n      <Route component={NotFound}></Route>\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\n\r\n//CSS file import comes here:\r\nimport \"./css/style.css\";\r\n\r\n//own component imports come here:\r\nimport App from \"./components/App\";\r\nimport StorePicker from \"./components/StorePicker\";\r\nimport Router from \"./components/Router\";\r\n\r\n//every single component will be its own class\r\n//and every single class needs at least 1 single method called \"render\" - which will contain what is rendered on the page\r\n\r\n//we touch the DOM only when we mount the entire application to the page (no other direct DOM manipulation in React)\r\n//react-dom does all the DOM-rendering stuff into index.html's <div id=\"main\">...</div>\r\n//the created React classes can be used as HTML tags in render()\r\n//BEST PRACTICE: store all of our components in it's own files, in /src/components folder\r\n\r\n//render(<p>HEYYYYYY</p>, document.querySelector(\"#main\"));\r\n//render(<App />, document.querySelector(\"#main\"));\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}